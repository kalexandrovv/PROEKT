public class kasovaBelejka extends JPanel {
	
	
	//boolean method checks is a string made out of numbers
	public static boolean isNumeric(String str) {
	    for (char c : str.toCharArray()) {
	        if (!Character.isDigit(c) && c!='.') return false;
	    }
	    return true;
	}
	
	public kasovaBelejka() {
		
		
		this.setLayout(null);
		this.setBackground(Color.pink);
		
		//labels, textfields, textArea
		JLabel label1 = new JLabel("Enter an amount, a product and the price for each one");
		label1.setFont(new Font("Times New Roman", Font.PLAIN, 25));
		label1.setBounds(30, 10, 600, 30);
		this.add(label1); 
		
		JTextField amountText = new JTextField();
		amountText.setBounds(30, 50, 50, 40);
		this.add(amountText);
		amountText.setColumns(10);
				
		JTextField productText = new JTextField();
		productText.setColumns(10);
		productText.setBounds(100, 50, 200, 40);
		this.add(productText);
		
		JTextField priceText = new JTextField();
		priceText.setBounds(320, 50, 60, 40);
		this.add(priceText);
		priceText.setColumns(10);
	    
		JTextArea printText = new JTextArea();
		printText.setBounds(50, 150, 600, 400);
		this.add(printText);
		printText.setColumns(10);
		
		JButton addButton = new JButton("Add product");
		addButton.setFont(new Font("Times New Roman", Font.PLAIN, 15));
		
		//files
		File file = new File("bill.txt");
		File totalFile = new File("total.txt");
		
		//clear everything from files
		try {
			FileWriter fw = new FileWriter(file);
			fw.write("");
		    fw.close();
		} catch (IOException e) {
		    e.printStackTrace();
		}
		
		try {
			FileWriter fw = new FileWriter(totalFile);
			fw.write("");
		    fw.close();
		} catch (IOException e) {
		    e.printStackTrace();
		}
		
		printText.setText("Hello. What would you like to buy?");
		
		addButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				
				//check if info is valid
				boolean error=false;
				if(amountText.getText()=="" || productText.getText()=="" || priceText.getText()=="") {
					printText.setText("Please, fill all the text boxes!");
					error=true;
				}
				if(!isNumeric(amountText.getText()) || !isNumeric(priceText.getText())) {
					printText.setText("Please, enter numbers only for price and amount!");
					error=true;
				}
				
				if(!error) {
					//get info from text boxes
					int amount = Integer.parseInt(amountText.getText()); 
					String product = productText.getText();
					double price = Double.parseDouble(priceText.getText());
					
					String bill=""+product+ "----------" + price*amount+" lv\n";
					double totalPrice=price*amount;
					
					//add current product to bill.txt
					try {
						FileWriter fw = new FileWriter(file,true);
						fw.write(bill);
					    fw.close();
					} catch (IOException e) {
					    e.printStackTrace();
					}
					
					//update current total price (total.txt)
					Scanner sc;
					try {
						sc = new Scanner(totalFile);
						if(sc.hasNextLine()) {
							totalPrice+=Double.parseDouble(sc.nextLine());
						}
						sc.close();
					} catch (FileNotFoundException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
					
					try {
						FileWriter fw = new FileWriter(totalFile);
						fw.write(""+totalPrice);
					    fw.close();
					} catch (IOException e) {
					    e.printStackTrace();
					}
					
					//show cart to user (bill.txt)
					String print="";
					try {
						Scanner scan = new Scanner(file);
						while (scan.hasNextLine()) {
							print += scan.nextLine() + "\n";
						}
						scan.close();
					} catch (FileNotFoundException e) {
						try {
							file.createNewFile();
						} catch (IOException e1) {
							// TODO Auto-generated catch block
							e1.printStackTrace();
						}
					}

					printText.setText("This is your cart right now\n" + print);
				}
			}
		});
		addButton.setBounds(400, 50, 120, 50);
		this.add(addButton); 
		
		JButton printBill = new JButton("Print Bill");
		printBill.setFont(new Font("Times New Roman", Font.PLAIN, 15));
		
		printBill.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				
				//get total price from total.txt
				String total="";
				Scanner sc;
				try {
					sc = new Scanner(totalFile);
					total = sc.nextLine();
					sc.close();
				} catch (FileNotFoundException e2) {
					// TODO Auto-generated catch block
					e2.printStackTrace();
				}
				
				//get bill.txt into string
				String print="";
				try {
					Scanner scan = new Scanner(file);
					while (scan.hasNextLine()) {
						print += scan.nextLine() + "\n";
					}
					scan.close();
					print+="\nÎáùî---------------"+total+"ëâ\n";
					
					SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");  
				    Date date = new Date();
					print+=formatter.format(date)+"\n";
					
				} catch (FileNotFoundException e) {
					try {
						file.createNewFile();
					} catch (IOException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
				}
				
				//print bill
				printText.setText(print);
				
			}
		});
		printBill.setBounds(550, 50, 130, 50);
		this.add(printBill);

	}
	
	//Create and show GUI
	private static void createAndShowGUI() {
		JFrame f=new JFrame("Bill");//creating a frame 
		
		f.setSize(750, 650);  
        f.setLayout(null);  
        f.setVisible(true);
        
        kasovaBelejka newContentPane = new kasovaBelejka();
        newContentPane.setOpaque(true);
        f.setContentPane(newContentPane);
        
	}
	
	public static void main(String[] args) {
		
	    //Create and show this application's GUI.
		javax.swing.SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				createAndShowGUI();
			}
		});		
	}

}
